import{_ as a,o as s,c as e,S as l}from"./chunks/framework.88ce82f1.js";const _=JSON.parse('{"title":"Hello World","description":"","frontmatter":{},"headers":[],"relativePath":"quick-start/hello-world.md","filePath":"quick-start/hello-world.md","lastUpdated":1692871589000}'),o={name:"quick-start/hello-world.md"},n=l(`<h1 id="hello-world" tabindex="-1">Hello World <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello World&quot;">​</a></h1><h2 id="创建新项目" tabindex="-1">创建新项目 <a class="header-anchor" href="#创建新项目" aria-label="Permalink to &quot;创建新项目&quot;">​</a></h2><h2 id="使用-rustc" tabindex="-1">使用 rustc <a class="header-anchor" href="#使用-rustc" aria-label="Permalink to &quot;使用 rustc&quot;">​</a></h2><p>因为<code>Rust</code>是静态语言，所以需要编译之后才可以执行（最大区别是变量数据类型不可变），而<code>Ruby、Python、JavaScript</code>是动态语言，所以可以直接执行。</p><ol><li>新建<code>main.rs</code>(约定文件后缀为rs)</li></ol><div class="language-rs line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// main.rs</span></span>
<span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li><code>rustc main.rs</code> (main.rs为需要编译的rust文件，其实和gcc一样)</li><li><code>main</code> (执行编译后的二进制)</li></ol><h2 id="使用-cargo" tabindex="-1">使用 Cargo <a class="header-anchor" href="#使用-cargo" aria-label="Permalink to &quot;使用 Cargo&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>😀 我们将在新的<code>Rust</code>开发环境中编写一个小应用。首先用<code>Cargo</code>创建一个新项目。</p></div><p>在您的终端中执行:</p><p>初始化项目👉 <code>cargo new hello-rust</code></p><p>执行rust文件👉 <code>cargo run</code></p>`,12),r=[n];function t(c,p,i,d,u,h){return s(),e("div",null,r)}const b=a(o,[["render",t]]);export{_ as __pageData,b as default};
